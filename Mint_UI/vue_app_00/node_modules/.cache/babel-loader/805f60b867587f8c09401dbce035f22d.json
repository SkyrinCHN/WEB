{"remainingRequest":"/Users/liuhai/Desktop/WEB/Mint_UI/vue_app_00/node_modules/babel-loader/lib/index.js!/Users/liuhai/Desktop/WEB/Mint_UI/vue_app_00/src/main.js","dependencies":[{"path":"/Users/liuhai/Desktop/WEB/Mint_UI/vue_app_00/src/main.js","mtime":1547000495963},{"path":"/Users/liuhai/Desktop/WEB/Mint_UI/vue_app_00/node_modules/cache-loader/dist/cjs.js","mtime":1534853416000},{"path":"/Users/liuhai/Desktop/WEB/Mint_UI/vue_app_00/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport 'mint-ui/lib/style.css'; //引入vuex\n\nimport Vuex from \"vuex\";\nVue.config.productionTip = false; //5: 设置请求的根路径 \n//Vue.http.options.root = \"http://127.0.0.1/vue_ser/\";\n//6:全局设置post 时候表音的数据组织格式为 application/x-www-form-urlencoded\n//Vue.http.options.emulateJSON = true;\n// 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\n\nimport './lib/mui/css/mui.css'; // 导入 MUI 的样式表，扩展图标样式，购物车图标\n// 还需要加载图标字体文件\n\nimport './lib/mui/css/icons-extra.css'; //引入mint-ui组件库\n\nimport { Header, Swipe, SwipeItem, Button } from \"mint-ui\";\nimport axios from \"axios\"; //修改配置信息 跨域访问 保存session\n\naxios.defaults.withCredentials = true; //注册axios\n\nVue.prototype.axios = axios; //注册Vuex\n\nVue.use(Vuex);\nvar store = new Vuex.Store({\n  state: {\n    cartCount: 0\n  },\n  //属性保存共享全局数据\n  mutations: {\n    increment: function increment(state) {\n      state.cartCount++;\n    },\n    substract: function substract(state) {\n      state.cartCount--;\n    }\n  },\n  //函数操作共享数据\n  getters: {\n    optCartCount: function optCartCount(state) {\n      return state.cartCount;\n    } //函数获取共享数据\n\n  }\n});\nVue.component(Header.name, Header);\nVue.component(Swipe.name, Swipe);\nVue.component(SwipeItem.name, SwipeItem);\nVue.component(Button.name, Button); //创建一个日期格式的过滤器 2018-10-10 12:11:11\n\nVue.filter(\"datetimeFilter\", function (val) {\n  //val 当前的日期对象\n  //新建日期对象\n  var data = new Date(val);\n  var y = data.getFullYear();\n  var m = data.getMonth() + 1;\n  var d = data.getDate();\n  var h = data.getHours();\n  var min = data.getMinutes();\n  var s = data.getSeconds(); //拼接字符串\n\n  m < 10 && (m = \"0\" + m);\n  d < 10 && (d = \"0\" + d); // console.log(typeof(y));\n\n  var year = y.toString().slice(2); // console.log(typeof (year));\n  // console.log(year);\n\n  return \"\".concat(year, \"-\").concat(m, \"-\").concat(d, \" \").concat(h, \":\").concat(min);\n});\nnew Vue({\n  router: router,\n  render: function render(h) {\n    return h(App);\n  },\n  store: store\n}).$mount('#app');",{"version":3,"sources":["src/main.js"],"names":["Vue","App","router","Vuex","config","productionTip","Header","Swipe","SwipeItem","Button","axios","defaults","withCredentials","prototype","use","store","Store","state","cartCount","mutations","increment","substract","getters","optCartCount","component","name","filter","val","data","Date","y","getFullYear","m","getMonth","d","getDate","h","getHours","min","getMinutes","s","getSeconds","year","toString","slice","render","$mount"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,uBAAP,C,CACA;;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACAH,IAAII,MAAJ,CAAWC,aAAX,GAA2B,KAA3B,C,CACA;AACA;AACA;AACA;AACA;;AACA,OAAO,uBAAP,C,CACA;AACA;;AACA,OAAO,+BAAP,C,CACA;;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,SAHF,EAIEC,MAJF,QAKO,SALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACAA,MAAMC,QAAN,CAAeC,eAAf,GAAiC,IAAjC,C,CACA;;AACAZ,IAAIa,SAAJ,CAAcH,KAAd,GAAsBA,KAAtB,C,CACA;;AACAV,IAAIc,GAAJ,CAAQX,IAAR;AACA,IAAIY,QAAQ,IAAIZ,KAAKa,KAAT,CAAe;AACzBC,SAAO;AAACC,eAAU;AAAX,GADkB;AACJ;AACrBC,aAAW;AACTC,aADS,qBACCH,KADD,EACQ;AAAEA,YAAMC,SAAN;AAAmB,KAD7B;AAETG,aAFS,qBAECJ,KAFD,EAEO;AAACA,YAAMC,SAAN;AAAkB;AAF1B,GAFc;AAKvB;AACFI,WAAS;AACPC,kBAAa,sBAASN,KAAT,EAAe;AAAC,aAAOA,MAAMC,SAAb;AAAuB,KAD7C,CAER;;AAFQ;AANgB,CAAf,CAAZ;AAUAlB,IAAIwB,SAAJ,CAAclB,OAAOmB,IAArB,EAA2BnB,MAA3B;AACAN,IAAIwB,SAAJ,CAAcjB,MAAMkB,IAApB,EAA0BlB,KAA1B;AACAP,IAAIwB,SAAJ,CAAchB,UAAUiB,IAAxB,EAA8BjB,SAA9B;AACAR,IAAIwB,SAAJ,CAAcf,OAAOgB,IAArB,EAA2BhB,MAA3B,E,CAEA;;AACAT,IAAI0B,MAAJ,CAAW,gBAAX,EAA6B,UAAUC,GAAV,EAAe;AAC1C;AACA;AACA,MAAIC,OAAO,IAAIC,IAAJ,CAASF,GAAT,CAAX;AACA,MAAIG,IAAIF,KAAKG,WAAL,EAAR;AACA,MAAIC,IAAIJ,KAAKK,QAAL,KAAkB,CAA1B;AACA,MAAIC,IAAIN,KAAKO,OAAL,EAAR;AACA,MAAIC,IAAIR,KAAKS,QAAL,EAAR;AACA,MAAIC,MAAMV,KAAKW,UAAL,EAAV;AACA,MAAIC,IAAIZ,KAAKa,UAAL,EAAR,CAT0C,CAU1C;;AACAT,MAAI,EAAJ,KAAWA,IAAI,MAAMA,CAArB;AACAE,MAAI,EAAJ,KAAWA,IAAI,MAAMA,CAArB,EAZ0C,CAa1C;;AACA,MAAIQ,OAAOZ,EAAEa,QAAF,GAAaC,KAAb,CAAmB,CAAnB,CAAX,CAd0C,CAe1C;AACA;;AACA,mBAAUF,IAAV,cAAkBV,CAAlB,cAAuBE,CAAvB,cAA4BE,CAA5B,cAAiCE,GAAjC;AACD,CAlBD;AAmBA,IAAItC,GAAJ,CAAQ;AACNE,gBADM;AAEN2C,UAAQ;AAAA,WAAKT,EAAEnC,GAAF,CAAL;AAAA,GAFF;AAGNc;AAHM,CAAR,EAIG+B,MAJH,CAIU,MAJV","sourceRoot":"/Users/liuhai/Desktop/WEB/Mint_UI/vue_app_00","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport 'mint-ui/lib/style.css'\r\n//引入vuex\r\nimport Vuex from \"vuex\"\r\nVue.config.productionTip = false\r\n//5: 设置请求的根路径 \r\n//Vue.http.options.root = \"http://127.0.0.1/vue_ser/\";\r\n//6:全局设置post 时候表音的数据组织格式为 application/x-www-form-urlencoded\r\n//Vue.http.options.emulateJSON = true;\r\n// 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\r\nimport './lib/mui/css/mui.css'\r\n// 导入 MUI 的样式表，扩展图标样式，购物车图标\r\n// 还需要加载图标字体文件\r\nimport './lib/mui/css/icons-extra.css'\r\n//引入mint-ui组件库\r\nimport {\r\n  Header,\r\n  Swipe,\r\n  SwipeItem,\r\n  Button\r\n} from \"mint-ui\";\r\nimport axios from \"axios\";\r\n//修改配置信息 跨域访问 保存session\r\naxios.defaults.withCredentials = true;\r\n//注册axios\r\nVue.prototype.axios = axios;\r\n//注册Vuex\r\nVue.use(Vuex);\r\nvar store = new Vuex.Store({\r\n  state: {cartCount:0},//属性保存共享全局数据\r\n  mutations: {\r\n    increment(state) { state.cartCount++ },\r\n    substract(state){state.cartCount--}\r\n  },//函数操作共享数据\r\n  getters: {\r\n    optCartCount:function(state){return state.cartCount}\r\n  }//函数获取共享数据\r\n})\r\nVue.component(Header.name, Header);\r\nVue.component(Swipe.name, Swipe);\r\nVue.component(SwipeItem.name, SwipeItem);\r\nVue.component(Button.name, Button);\r\n\r\n//创建一个日期格式的过滤器 2018-10-10 12:11:11\r\nVue.filter(\"datetimeFilter\", function (val) {\r\n  //val 当前的日期对象\r\n  //新建日期对象\r\n  var data = new Date(val);\r\n  var y = data.getFullYear();\r\n  var m = data.getMonth() + 1;\r\n  var d = data.getDate();\r\n  var h = data.getHours();\r\n  var min = data.getMinutes();\r\n  var s = data.getSeconds();\r\n  //拼接字符串\r\n  m < 10 && (m = \"0\" + m);\r\n  d < 10 && (d = \"0\" + d);\r\n  // console.log(typeof(y));\r\n  var year = y.toString().slice(2);\r\n  // console.log(typeof (year));\r\n  // console.log(year);\r\n  return `${year}-${m}-${d} ${h}:${min}`;\r\n})\r\nnew Vue({\r\n  router,\r\n  render: h => h(App),\r\n  store,\r\n}).$mount('#app')"]}]}